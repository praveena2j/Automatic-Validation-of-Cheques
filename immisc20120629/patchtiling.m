% patchtiling tiles columned image patches as a image
% 
% img = patchtiling(X, [pn pm], [tn tm], borderwidth, bordervalue)
%
%
%Output parameter:
% img: tiled image
%
%Input parameters:
% X: columned image patches generated by im2col matlab function
% [pn pm]: size of patch
% [tn tm]: size of tile
% borderwidth (optional): border of each patch (defualt: 1)
% bordervalue (optional): value of border (defualt: 0)
%
%
%Example:
% img = double(imread('img.jpg'));
% X = im2col(img,[6 6]);
% img = patchtiling(X, [6 6], [size(X,1)-5,size(X,2)-5]);
%
%Version: 20120629

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Miscellaneous tools for image processing                 %
%                                                          %
% Copyright (C) 2012 Masayuki Tanaka. All rights reserved. %
%                    mtanaka@ctrl.titech.ac.jp             %
%                                                          %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
function img = patchtiling(X, psize, tsize, borderwidth, bordervalue)

if( nargin < 4 )
 borderwidth = 1;
end

if( nargin < 5 )
 bordervalue = 0;
end

X = reshape(X, [psize(1) psize(2), size(X,2)]);

isize = [(psize(1)+borderwidth)*tsize(1)-borderwidth,(psize(2)+borderwidth)*tsize(2)-borderwidth];
img = ones(isize) * bordervalue;

k = 1;
for i=0:tsize(1)-1
 ioff = 1 + i * (psize(1)+borderwidth);
 for j=0:tsize(2)-1
  joff = 1 + j * (psize(2)+borderwidth);
  
  img(ioff:ioff+psize(1)-1,joff:joff+psize(2)-1) = X(:,:,k);
  k = k + 1;
  if( k > size(X,3) )
   return
  end
  
 end
end
